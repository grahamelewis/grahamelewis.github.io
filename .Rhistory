smod1
x <- rnorm(100)
y <- x+rnorm(100)
mod1 <- lm(y~x)
b1 <- coef(mod1)[[1]]
b2 <- coef(mod1)[[2]]
smod1 <- summary(mod1)
smod1
install.packages("tidyr")
library(ggplot2)
library(dplyr)
library(knitr)
library(nycflights13)
install.packages("ggplot2")
install.packages("dplyr")
install.packages("knitr")
install.packages("nycflights13")
install.packages("moderndive")
install.packages("readr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("ggplot2")
install.packages("dplyr")
install.packages("knitr")
install.packages("nycflights13")
install.packages("moderndive")
install.packages("readr")
install.packages("tidyr")
library(ggplot2)
library(dplyr)
library(knitr)
library(nycflights13)
library(moderndive)
library(tidyr)
library("readr")
alaska_flights
View(alaska_flights)
ggplot(data = alaska_flights, mapping = aes(x = dep_delay, y = arr_delay)) + geom_point()
ggplot(data = alaska_flights, mapping = aes(x = dep_delay, y = arr_delay)) + geom_point()
geom_point(color = "red", shape = 18)
geom_point(color = "red", shape = 18)
ggplot(data = alaska_flights, mapping = aes(x = dep_delay, y = arr_delay)) + geom_point()
geom_point(color = "red", shape = 18)
RCT_data <- read_csv("https://users.econ.umn.edu/~holmes/econ3011/example_price_RCT_sim_data.csv")
RCT_data$expenditure <- RCT_data$price * RCT_data$quantity
RCT_data$log_price <- log(RCT_data$price)
RCT_data$log_quantity <- log(RCT_data$quantity)
tapply(RCT_data$expenditure, RCT_data$group, mean)
# Perform the regression
regression_result <- lm(log_quantity ~ log_price, data = RCT_data)
# Print the regression output
summary(regression_result)
ggplot(data = RCT_data, mapping = aes(x = log_price, y = log_quantity)) +
geom_point(color = "maroon") +
geom_smooth(method = "lm", se = FALSE) +
labs(title = "RCT Data: Log-Log Regression",
x = "Log Price",
y = "Log Quantity") +
theme_minimal() +
geom_text(aes(x = 4, y = 6, label = paste("R^2 = ", round(summary(regression_result)$r.squared, 2))),
color = "blue", size = 5)
ggplot(data = RCT_data, mapping = aes(x = log_price, y = log_quantity)) + geom_point(color = "maroon") + geom_smooth(method = "lm", se = FALSE) + labs(title = paste("R squared = ", round(summary(regression_result)$r.squared, 2)))
library(readr)
library(ggplot2)
# Load the data
RCT_data <- read_csv("https://users.econ.umn.edu/~holmes/econ3011/example_price_RCT_sim_data.csv")
# View the data
View(RCT_data)
# Create the expenditure variables and logs of price and quantity
RCT_data$expenditure <- RCT_data$price * RCT_data$quantity
RCT_data$log_price <- log(RCT_data$price)
RCT_data$log_quantity <- log(RCT_data$quantity)
# Plot the data
ggplot(data = RCT_data, mapping = aes(x = price, y = quantity)) + geom_point()
# Replace the quantity with expenditure
ggplot(data = RCT_data, mapping = aes(x = price, y = expenditure)) + geom_point()
# Replace the quantity with log(quantity)
ggplot(data = RCT_data, mapping = aes(x = log_price, y = log_quantity)) + geom_point()
# Replace the quantity with expenditure
ggplot(data = RCT_data, mapping = aes(x = price, y = expenditure)) + geom_point()
library(readr)
library(ggplot2)
# Load the data
RCT_data <- read_csv("https://users.econ.umn.edu/~holmes/econ3011/example_price_RCT_sim_data.csv")
# View the data
View(RCT_data)
# Create the expenditure variables and logs of price and quantity
RCT_data$expenditure <- RCT_data$price * RCT_data$quantity
RCT_data$log_price <- log(RCT_data$price)
RCT_data$log_quantity <- log(RCT_data$quantity)
# Plot the data
ggplot(data = RCT_data, mapping = aes(x = price, y = quantity)) + geom_point()
# Replace the quantity with expenditure
ggplot(data = RCT_data, mapping = aes(x = price, y = expenditure)) + geom_point()
# Replace the quantity with log(quantity)
ggplot(data = RCT_data, mapping = aes(x = log_price, y = log_quantity)) + geom_point()
# Plot the data
ggplot(data = RCT_data, mapping = aes(x = price, y = quantity)) + geom_point()
# Replace the quantity with log(quantity)
ggplot(data = RCT_data, mapping = aes(x = log_price, y = log_quantity)) + geom_point()
library(readr)
library(ggplot2)
# Load the data
RCT_data <- read_csv("https://users.econ.umn.edu/~holmes/econ3011/example_price_RCT_sim_data.csv")
# View the data
View(RCT_data)
# Create the expenditure variables and logs of price and quantity
RCT_data$expenditure <- RCT_data$price * RCT_data$quantity
RCT_data$log_price <- log(RCT_data$price)
RCT_data$log_quantity <- log(RCT_data$quantity)
# Plot the data
ggplot(data = RCT_data, mapping = aes(x = price, y = quantity)) + geom_point()
install.packages("languageserver")
knitr::opts_chunk$set(echo = TRUE)
install.packages("bea.R")
install.packages("bea.R")
install.packages("bea.R")
install.packages("bea.R")
knitr::opts_chunk$set(echo = TRUE)
library(bea.R)
beaKey <- "[09C377ED-00AA-4B83-944C-1887E9532A4B]"
beaSearch('Personal Consumption Expenditures', beaKey)
library(bea.R)
install.packages("bea.R")
library(bea.R)
library(bea.R)
library(bea.R)
library(bea.R)
library(bea.R)
library(bea.R)
install.packages("bea.R")
install.packages("bea.R")
library(bea.R)
beaSearch('Personal Consumption Expenditures', beaKey)
beaSearch('Personal Consumption Expenditures', beaKey)
beaKey <- "[09C377ED-00AA-4B83-944C-1887E9532A4B]"
beaSearch('Personal Consumption Expenditures', beaKey)
specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1',
'Frequency' = 'Q',
'Year' = '2010,2012,2013,2014',
'ResultFormat' = 'json'
)
df <- beaGet(specs);
head(df, 3)
beaKey <- "09C377ED-00AA-4B83-944C-1887E9532A4B"
specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1',
'Frequency' = 'Q',
'Year' = '2010,2012,2013,2014',
'ResultFormat' = 'json'
)
df <- beaGet(specs);
head(df, 3)
View(df)
b <- beaSearch('Personal Consumption Expenditures', beaKey)
specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1',
'Frequency' = 'Q',
'Year' = '2010,2012,2013,2014',
'ResultFormat' = 'json'
)
df <- beaGet(specs);
head(df, 3)
specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1',
'Frequency' = 'Q',
'Year' = '2021',
'ResultFormat' = 'json'
)
df <- beaGet(specs);
head(df, 3)
specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1',
'Frequency' = 'Q',
'Year' = '2021',
'ResultFormat' = 'json'
)
df <- beaGet(specs);
head(df, 3)
library(bea.R)
beaKey <- "09C377ED-00AA-4B83-944C-1887E9532A4B"
b <- beaSearch('Personal Consumption Expenditures', beaKey)
specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1',
'Frequency' = 'Q',
'Year' = '2021',
'ResultFormat' = 'json'
)
df <- beaGet(specs);
head(df, 3)
NIPA_1_1_5 <- beaGet(beaKey, "NIPA", "T10105", "ALL")
NIPA_1_1_5 <- specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1.1.5',
'Frequency' = 'Q',
'Year' = '1980,1990,2000,2010',
'ResultFormat' = 'json'
)
View(NIPA_1_1_5)
df <- beaGet(NIPA_1_1_5);
beaKey <- "09C377ED00AA4B83944C1887E9532A4B"
# Download NIPA Table 1.1.5
NIPA_1_1_5 <- specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1.1.5',
'Frequency' = 'Q',
'Year' = '1980,1990,2000,2010',
'ResultFormat' = 'json'
)
df <- beaGet(NIPA_1_1_5);
beaKey <- "09C377ED-00AA-4B83-944C-1887E9532A4B"
NIPA_1_1_5 <- specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1.1.5',
'Frequency' = 'Q',
'Year' = '1980,1990,2000,2010',
'ResultFormat' = 'json'
)
df <- beaGet(NIPA_1_1_5);
library(bea.R)
beaKey <- "09C377ED-00AA-4B83-944C-1887E9532A4B"
# Download NIPA Table 1.1.5
NIPA_1_1_5 <- specs <- list(
'UserID' = beaKey,
'Method' = 'GetData',
'datasetname' = 'NIPA',
'TableID' = '1.1.5',
'Frequency' = 'Q',
'Year' = '1980,1990,2000,2010',
'ResultFormat' = 'json'
)
df <- beaGet(NIPA_1_1_5);
df <- beaGet(NIPA_1_1_5, asWide = FALSE);
library(bea.R)
beaKey =  "09C377ED-00AA-4B83-944C-1887E9532A4B"
#Personal Income Per Capita
#Specify request parameters
pcinc_req <- list(UserID   = beaKey,
Method   = 'getdata',
LineCode   = '1',
TableName  = 'CA1',
Frequencu  = 'a',
DatasetName = 'regionalincome',
Year     = '2015,2016',
GeoFIPS   = 'state')
#Send parameters via beaGet
pcinc_regional <- beaGet(pcinc_req)
pcpce_req <- list(UserID = beaKey,
Method = 'GetData',
DatasetName = 'RegionalProduct',
Component = 'PCPCE_SAN',
IndustryID = '1' ,
Year = '2015,2016',
GeoFIPS = 'state',
Frequency = 'a')
#Send parameters via beaGet
pcpce <- beaGet(pcpce_req)
# Call 'file.csv'
data <- read.csv("file.csv")
# Call 'file.csv'
data <- read.csv("file.csv", "rt")
# Call 'file.csv'
data <- read.csv("file.csv")
ls
# Call 'file.csv'
# Change directory to Desktop
setwd("~/Desktop")
data <- read.csv("file.csv")
View(data)
library(readr)
# Define the path to the zip file
zip_file <- "data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir)
txt_file <- file.path(unzip_dir, "FAM1984.txt")
# Necessary library
library(readr)
install.packages("tidyverse")
# Define the path to the zip file
zip_file <- "data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir)
txt_file <- file.path(unzip_dir, "FAM1984.txt")
library(readr)
# Define the path to the zip file
zip_file <- "data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir)
txt_file <- file.path(unzip_dir, "FAM1984.txt")
# Define the path to the zip file
zip_file <- "../data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir)
txt_file <- file.path(unzip_dir, "FAM1984.txt")
txt_file <- file.path("../data/fam_data/fam1984/FAM1984.txt")
library(readr)
# Define the path to the zip file
zip_file <- "../data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir)
txt_file <- file.path(unzip_dir, "/FAM1984.txt")
# Define the path to the zip file
zip_file <- "../data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir)
txt_file <- file.path("../data/fam_data/", "fam1984/FAM1984.txt")
# Define the path to the zip file
zip_file <- "../data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir)
# Corrected path for the extracted file
txt_file <- file.path(unzip_dir, "FAM1984.txt")
# Check if the file exists
print(file.exists(txt_file))  # Should return TRUE if successful
# Define the path to the zip file
zip_file <- "../data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir)
# Corrected path for the extracted file
txt_file <- file.path(unzip_dir, "FAM1984.txt")
list.files(unzip_dir)
# Define the path to the zip file
zip_file <- "../data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir, list = TRUE)
zip_file <- "../data/fam_data/fam1984.zip"
# Unzip the file to a temporary directory and get the path of the extracted .txt file
unzip_dir <- tempdir()
unzip(zip_file, exdir = unzip_dir, list = TRUE)
file.exists("../data/fam_data/fam1984.zip")
file.exists("../data/fam_data/fam1984")
file.exists("../data/fam_data/fam1984/FAM1984.txt")
ls
install.packages("here")
library(here)
setwd(here::here())
file.exists("../data/fam_data/fam1984/FAM1984.txt")
getwd()
